package MetaModel.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.lang.core.behavior.ScopeProvider__BehaviorDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class TargetConnector_Constraints extends BaseConstraintsDescriptor {
  public TargetConnector_Constraints() {
    super(CONCEPTS.TargetConnector$Th);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.targetType$m77w, this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_cdvks9_a0a0a0a0a1a0a0a0c;
          }
          @Override
          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            return (Scope) ScopeProvider__BehaviorDescriptor.getScope_id52_Geb4QDV$.invoke(_context.getReferenceNode(), _context.getLinkTargetConcept(), _context.getReferenceNode());
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }
  private static final SNodePointer breakingNode_cdvks9_a0a0a0a0a1a0a0a0c = new SNodePointer("r:489510dc-ea52-4795-b022-2cffd05211ac(MetaModel.constraints)", "6265365816103053998");

  private static final class CONCEPTS {
    /*package*/ static final SConcept TargetConnector$Th = MetaAdapterFactory.getConcept(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302fL, "MetaModel.structure.TargetConnector");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink targetType$m77w = MetaAdapterFactory.getReferenceLink(0x9859e7a148764909L, 0xa6648a214c206698L, 0x355f4a6bd0f1302fL, 0x355f4a6bd0f13030L, "targetType");
  }
}
